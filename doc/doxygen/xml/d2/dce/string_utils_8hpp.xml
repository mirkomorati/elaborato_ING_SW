<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.8.13">
    <compounddef id="d2/dce/string_utils_8hpp" kind="file" language="C++">
        <compoundname>stringUtils.hpp</compoundname>
        <includes local="no">string</includes>
        <includes local="no">sstream</includes>
        <includes local="no">vector</includes>
        <includes local="no">iterator</includes>
        <includedby refid="dc/d1f/_date_8cpp" local="yes">code/utils/Date.cpp</includedby>
        <incdepgraph>
            <node id="817">
                <label>code/utils/stringUtils.hpp</label>
                <link refid="d2/dce/string_utils_8hpp"/>
                <childnode refid="818" relation="include">
                </childnode>
                <childnode refid="819" relation="include">
                </childnode>
                <childnode refid="820" relation="include">
                </childnode>
                <childnode refid="821" relation="include">
                </childnode>
            </node>
            <node id="821">
                <label>iterator</label>
            </node>
            <node id="818">
                <label>string</label>
            </node>
            <node id="820">
                <label>vector</label>
            </node>
            <node id="819">
                <label>sstream</label>
            </node>
        </incdepgraph>
        <invincdepgraph>
            <node id="822">
                <label>code/utils/stringUtils.hpp</label>
                <link refid="d2/dce/string_utils_8hpp"/>
                <childnode refid="823" relation="include">
                </childnode>
            </node>
            <node id="823">
                <label>code/utils/Date.cpp</label>
                <link refid="dc/d1f/_date_8cpp"/>
            </node>
        </invincdepgraph>
        <innernamespace refid="d0/d04/namespacemm">mm</innernamespace>
        <innernamespace refid="d1/d50/namespacemm_1_1util">mm::util</innernamespace>
        <innernamespace refid="da/de0/namespacemm_1_1util_1_1str">mm::util::str</innernamespace>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <programlisting>
            <codeline lineno="1">
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Created<sp/>by<sp/>No√®<sp/>Murr<sp/>on<sp/>06/09/2017.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="3">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="4">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="5">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifndef<sp/>NAVTOOLS_STRINGUTILS_HPP
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="6">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>NAVTOOLS_STRINGUTILS_HPP
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="7">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="8">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="9">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;string&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="10">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;sstream&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="11">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;vector&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="12">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;iterator&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="13">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="14">
                <highlight class="normal"></highlight>
                <highlight class="keyword">namespace
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="d0/d04/namespacemm" kindref="compound">mm</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="15">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">namespace
                    <sp/>
                </highlight>
                <highlight class="normal">util<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="16" refid="da/de0/namespacemm_1_1util_1_1str" refkind="compound">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">namespace
                    <sp/>
                </highlight>
                <highlight class="normal">str<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="17">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Out&gt;
                </highlight>
            </codeline>
            <codeline lineno="18" refid="da/de0/namespacemm_1_1util_1_1str_1a0d736c6931c50f009683998b5b4cdcaa"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="da/de0/namespacemm_1_1util_1_1str_1a0d736c6931c50f009683998b5b4cdcaa" kindref="member">
                        split</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::string<sp/>&amp;s,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>delim,<sp/>Out<sp/>result,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>skipEmpty<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="19">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::stringstream<sp/>ss;
                </highlight>
            </codeline>
            <codeline lineno="20">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ss.str(s);
                </highlight>
            </codeline>
            <codeline lineno="21">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::string<sp/>item;
                </highlight>
            </codeline>
            <codeline lineno="22">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(std::getline(ss,<sp/>item,<sp/>delim))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="23">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(skipEmpty<sp/>and<sp/>item.empty())
                    <sp/>
                </highlight>
                <highlight class="keywordflow">continue</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="24">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*(result++)<sp/>=<sp/>item;
                </highlight>
            </codeline>
            <codeline lineno="25">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="26">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="27">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="28" refid="da/de0/namespacemm_1_1util_1_1str_1a8e83f696879551bdc931a85f037a4671"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::vector&lt;std::string&gt;<sp/>
                    <ref refid="da/de0/namespacemm_1_1util_1_1str_1a0d736c6931c50f009683998b5b4cdcaa" kindref="member">
                        split</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::string<sp/>&amp;s,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>delim,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>skipEmpty<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="29">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">using<sp/>namespace
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="d8/dcc/namespacestd" kindref="compound">std</ref>;
                </highlight>
            </codeline>
            <codeline lineno="30">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>vector&lt;string&gt;<sp/>elems;
                </highlight>
            </codeline>
            <codeline lineno="31">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="da/de0/namespacemm_1_1util_1_1str_1a0d736c6931c50f009683998b5b4cdcaa" kindref="member">
                        split</ref>(s,<sp/>delim,<sp/>back_inserter(elems),<sp/>skipEmpty);
                </highlight>
            </codeline>
            <codeline lineno="32">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>std::move(elems);
                </highlight>
            </codeline>
            <codeline lineno="33">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="34">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="35">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="36">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="37">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="38">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="39">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif<sp/>//NAVTOOLS_STRINGUTILS_HPP
                </highlight>
            </codeline>
        </programlisting>
        <location file="code/utils/stringUtils.hpp"/>
    </compounddef>
</doxygen>
